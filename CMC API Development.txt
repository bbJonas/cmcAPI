CMC API Development:

Database import to Excel:

// Manuell:

= Record.ToTable(Quelle)
= #"In Tabelle konvertiert"{1}[Value]
= Table.FromList(Value, Splitter.SplitByNothing(), null, null, ExtraValues.Error)
= Table.ExpandRecordColumn(#"In Tabelle konvertiert1", "Column1", {"id", "name", "symbol", "cmc_rank", "last_updated", "EUR"}, {"Column1.id", "Column1.name", "Column1.symbol", "Column1.cmc_rank", "Column1.last_updated", "Column1.EUR"})
= Table.ExpandRecordColumn(#"Erweiterte Column1", "Column1.EUR", {"price", "volume_24h", "market_cap"}, {"Column1.EUR.price", "Column1.EUR.volume_24h", "Column1.EUR.market_cap"})



// Erweiterter Editor Excel:

let
    Quelle = Json.Document(File.Contents("C:\Users\BitBunker\Documents\GitHub\cmcAPI\databaseCopy.json")),
    #"In Tabelle konvertiert" = Record.ToTable(Quelle),
    Value = #"In Tabelle konvertiert"{1}[Value],
    #"In Tabelle konvertiert1" = Table.FromList(Value, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Erweiterte Column1" = Table.ExpandRecordColumn(#"In Tabelle konvertiert1", "Column1", {"id", "name", "symbol", "cmc_rank", "last_updated", "EUR"}, {"Column1.id", "Column1.name", "Column1.symbol", "Column1.cmc_rank", "Column1.last_updated", "Column1.EUR"}),
    #"Erweiterte Column1.EUR" = Table.ExpandRecordColumn(#"Erweiterte Column1", "Column1.EUR", {"price", "volume_24h", "market_cap"}, {"Column1.EUR.price", "Column1.EUR.volume_24h", "Column1.EUR.market_cap"})
in
    #"Erweiterte Column1.EUR"



    Variablen:
      1. Import der Top X Daten
      2. X Coins in Basket (basketSize)
      3. Fiat Vergleichswährung (fiatRef)
      4. Coin aktueller Score (0-2)
      5. Coin gesamtbewertung (csRank) Muss Zahl zw. 0-1 sein! Manuell
      6. Coin annteil am Marketcap der basketSize
      7. BasketBestand (1 / 0)
      8. DeadCoin (XRP)
      9. NewMarketCap (Addition der top X MarketCaps)

    Schritte:
      1. Variable setzen
      2. Import der Daten von CMC
      3. Rank-Marketcap (gegeben)
      4. Rank-Volume bestimmen und zu Datensatz hinzufügen
      5. Rank-Marketcap <= basketSize (wenn Ja: +1)
      6. Rank-Volume <= basketSize  (wenn Ja: +1)
      7. Coin aktueller Score = 5. + 6.
      8. Coin im Basket?
      8.5: If (Coin.Aktueller (alle coins) Score >=1)>(BasketSize)) then
      9.      If Coin.Aktueller Score = 1
                      Then Coin.AktuellerScore + Coin.csRank

    10. If Coin.AktuellerScore = max(5).Coin.AkutuellerScore
    11.    then coin.BasketBestand (1)

    12. NewMarketCap = coin.marketcap if coin.BasketBestand = 1
    13. Coin.Anteil = coin.MarketCap /NewMarketCap

    Print BasketBestand + Coin.Anteil
